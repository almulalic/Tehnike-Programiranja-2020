{
    "id": 5697,
    "name": "Tehnike programiranja (2019\/2020), Ispit 2, Zadatak 4",
    "language": "C++",
    "preferred_compiler": "g++",
    "required_compiler": "g++",
    "compiler_features": [],
    "compiler_options": "-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes",
    "compiler_options_debug": "-std=c++11 -ggdb -lm -pass-exit-codes",
    "profile": "true",
    "debug": "true",
    "test": "true",
    "compile": "true",
    "run": "false",
    "test_specifications": [
        {
            "id": 31,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT1\n\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "2\n3 14 2 0\n251 3 44 -6 1 0\n"
            },
            "expected": [
                "Broj redova: Elementi 1. red (0 za kraj): Elementi 2. red (0 za kraj): Kreirana matrica:\\n3 14 2\\n251 3 44 -6 1\\n",
                "Broj redova: Elementi 1. reda (0 za kraj): Elementi 2. reda (0 za kraj): Kreirana matrica:\\n3 14 2\\n251 3 44 -6 1\\n",
                "Broj red: Elementi 1. reda (0 za kraj): Elementi 2. reda (0 za kraj): Kreirana matrica:\\n3 14 2\\n251 3 44 -6 1\\n"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 32,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT2\n\n_main();",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": "2000000000\n"
            },
            "expected": [
                "Broj redova: Nema dovoljno memorije!\\n",
                "Broj red: Nema dovoljno memorije!"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 33,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT3\n\ntry {\n    std::vector<std::queue<int>> M(5);\n    for(int i = 0; i < 5; i++) {\n      for(int j = 0; j <= i; j++) {\n        M[i].push(j);\n      }\n    }\n    auto m = NapraviDinamickuKopiju(M);\n        \n    for(int i = 0; i < M.size(); i++) {\n      for(int j = 0; j < M[i].size(); j++)\n        std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    delete[] m[0];\ndelete[] m;\n  }\n  catch(...) {\n    std::cout << \"GRESKA!\";\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "0 \\n0 1 \\n0 1 2 \\n0 1 2 3 \\n0 1 2 3 4 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 34,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT4\n\n  try {\n    std::vector<std::queue<int>> M(7);\n    for(int i = 0; i < 7; i++) {\n      for(int j = 0; j < i; j++) {\n        M[i].push(j+3);\n      }\n    }\n    auto m = NapraviDinamickuKopiju(M);\n        \n    for(int i = 0; i < M.size(); i++) {\n      for(int j = 0; j < M[i].size(); j++)\n        std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    delete[] m[0];\ndelete[] m;\n  }\n  catch(...) {\n    std::cout << \"GRESKA!\";\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "3 \\n3 4 \\n3 4 5 \\n3 4 5 6 \\n3 4 5 6 7 \\n3 4 5 6 7 8 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 35,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "\/\/AT5\n\n  try {\n    std::vector<std::queue<int>> M(1);\n        M[0].push(14);\n    \n    auto m = NapraviDinamickuKopiju(M);\n    \n    \n    for(int i = 0; i < M.size(); i++) {\n      for(int j = 0; j < M[i].size(); j++)\n        std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    delete[] m[0];\ndelete[] m;\n  }\n  catch(...) {\n    std::cout << \"GRESKA!\";\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "14"
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        },
        {
            "id": 36,
            "require_symbols": [],
            "replace_symbols": [],
            "code": "  try {\n    std::vector<std::queue<int>> M(2);\n        M[0].push(14);\n        M[0].push(7);\n        M[1].push(12);\n        M[1].push(8);\n        M[1].push(-19);\n    \n    auto m = NapraviDinamickuKopiju(M);\n    \n    for(int i = 0; i < M.size(); i++) {\n      for(int j = 0; j < M[i].size(); j++)\n        std::cout << m[i][j] << \" \";\n      std::cout << std::endl;\n    }\n    delete[] m[0];\ndelete[] m;\n  }\n  catch(...) {\n    std::cout << \"GRESKA!\";\n  }",
            "global_above_main": "",
            "global_top": "",
            "running_params": {
                "timeout": "10",
                "vmem": "1000000",
                "stdin": ""
            },
            "expected": [
                "14 7                                      \\n12 8 -19 "
            ],
            "expected_exception": "false",
            "expected_crash": "false",
            "ignore_whitespace": "true",
            "regex": "false",
            "substring": "true"
        }
    ]
}