{
    "buildhost_description": {
        "id": "lab002c01",
        "os": "Linux 2.6.32-754.2.1.el6.x86_64 x86_64\n\"CentOS release 6.10 (Final)\"\n",
        "compiler_version": "g++ (GCC) 6.2.0",
        "debugger_version": "GNU gdb (GDB) 7.12",
        "profiler_version": "valgrind-3.12.0"
    },
    "status": 4,
    "compile_result": {
        "status": 1,
        "output": ""
    },
    "run_result": [],
    "debug_result": [],
    "profile_result": [],
    "test_results": {
        "8": {
            "status": 1,
            "run_result": {
                "output": "Izuzetak: Trazena datoteka ne postoji\nIzuzetak: Trazena datoteka ne postoji\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "9": {
            "status": 6,
            "run_result": {
                "output": "\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==1864== Memcheck, a memory error detector\n==1864== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==1864== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==1864== Command: bs_test_9\n==1864== Parent PID: 1863\n==1864== \n==1864== Invalid write of size 4\n==1864==    at 0x40226A: Matrica<int>::ObnoviIzBinarneDatoteke(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const (bs_test_9.cpp:407)\n==1864==    by 0x40192C: main (bs_test_9.cpp:547)\n==1864==  Address 0x51efcd8 is 0 bytes after a block of size 8 alloc'd\n==1864==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==1864==    by 0x402842: Matrica<int>::AlocirajMemoriju(int, int) (bs_test_9.cpp:79)\n==1864==    by 0x40213D: Matrica<int>::Matrica(int, int, char) (bs_test_9.cpp:72)\n==1864==    by 0x4018F5: main (bs_test_9.cpp:546)\n==1864== \n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 4\n    at 0x40226A: Matrica<int>::ObnoviIzBinarneDatoteke(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const (bs_test_9.cpp:407)\n    by 0x40192C: main (bs_test_9.cpp:547)\n  Address 0x51efcd8 is 0 bytes after a block of size 8 alloc'd\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x402842: Matrica<int>::AlocirajMemoriju(int, int) (bs_test_9.cpp:79)\n    by 0x40213D: Matrica<int>::Matrica(int, int, char) (bs_test_9.cpp:72)\n    by 0x4018F5: main (bs_test_9.cpp:546)\n",
                        "file": "main.cpp",
                        "line": 401
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "10": {
            "status": 5,
            "run_result": {
                "output": "Izuzetak: Datoteka sadrzi besmislene podatke\n\n\nIzuzetak: Datoteka sadrzi besmislene podatke\n",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_1272/core.1854"
            },
            "debug_result": {
                "output": "[New LWP 1854]\nCore was generated by `bs_test_9'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x000000000040226a in Matrica<double>::SacuvajUBinarnuDatoteku (this=0x7ffc4581b880, imeDatoteke=...) at bs_test_10.cpp:335\n335\t\tchar separator = ',', newline = 10;\n#0  0x000000000040226a in Matrica<double>::SacuvajUBinarnuDatoteku (this=0x7ffc4581b880, imeDatoteke=...) at bs_test_10.cpp:335\n#1  0x000000000040192d in _main () at bs_test_10.cpp:534\n#2  0x000000363121ed20 in ?? ()\n#3  0x0000000000000000 in ?? ()",
                "parsed_output": [
                    {
                        "file": "main.cpp",
                        "line": 329
                    }
                ]
            },
            "profile_result": {
                "output": "==1891== Memcheck, a memory error detector\n==1891== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==1891== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==1891== Command: bs_test_10\n==1891== Parent PID: 1889\n==1891== \n==1891== Conditional jump or move depends on uninitialised value(s)\n==1891==    at 0x4026B8: Matrica<int>::Matrica(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) (bs_test_10.cpp:473)\n==1891==    by 0x401C28: main (bs_test_10.cpp:561)\n==1891== \n==1891== Conditional jump or move depends on uninitialised value(s)\n==1891==    at 0x402CDE: Matrica<double>::Matrica(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) (bs_test_10.cpp:473)\n==1891==    by 0x401D05: main (bs_test_10.cpp:572)\n==1891== \n==1891== \n==1891== HEAP SUMMARY:\n==1891==     in use at exit: 0 bytes in 0 blocks\n==1891==   total heap usage: 15 allocs, 15 frees, 108,264 bytes allocated\n==1891== \n==1891== All heap blocks were freed -- no leaks are possible\n==1891== \n==1891== For counts of detected and suppressed errors, rerun with: -v\n==1891== Use --track-origins=yes to see where uninitialised values come from\n==1891== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x4026B8: Matrica<int>::Matrica(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) (bs_test_10.cpp:473)\n    by 0x401C28: main (bs_test_10.cpp:561)\n",
                        "file": "main.cpp",
                        "line": 467
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "11": {
            "status": 6,
            "run_result": {
                "output": "Izuzetak: Datoteka sadrzi besmislene podatke\n\n\nIzuzetak: Datoteka sadrzi besmislene podatke\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "12": {
            "status": 6,
            "run_result": {
                "output": "     0     1\n     1     2\\n",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": {
                "output": "==1936== Memcheck, a memory error detector\n==1936== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==1936== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==1936== Command: bs_test_12\n==1936== Parent PID: 1935\n==1936== \n==1936== Invalid write of size 4\n==1936==    at 0x4026C0: Matrica<int>::ObnoviIzBinarneDatoteke(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const (bs_test_12.cpp:407)\n==1936==    by 0x401A2E: main (bs_test_12.cpp:552)\n==1936==  Address 0x51efcd8 is 0 bytes after a block of size 8 alloc'd\n==1936==    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n==1936==    by 0x402C9C: Matrica<int>::AlocirajMemoriju(int, int) (bs_test_12.cpp:79)\n==1936==    by 0x402429: Matrica<int>::Matrica(int, int, char) (bs_test_12.cpp:72)\n==1936==    by 0x401945: main (bs_test_12.cpp:547)\n==1936== \n",
                "status": 2,
                "parsed_output": [
                    {
                        "type": 2,
                        "output": " Invalid write of size 4\n    at 0x4026C0: Matrica<int>::ObnoviIzBinarneDatoteke(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const (bs_test_12.cpp:407)\n    by 0x401A2E: main (bs_test_12.cpp:552)\n  Address 0x51efcd8 is 0 bytes after a block of size 8 alloc'd\n    at 0x4A06849: operator new[](unsigned long) (vg_replace_malloc.c:423)\n    by 0x402C9C: Matrica<int>::AlocirajMemoriju(int, int) (bs_test_12.cpp:79)\n    by 0x402429: Matrica<int>::Matrica(int, int, char) (bs_test_12.cpp:72)\n    by 0x401945: main (bs_test_12.cpp:547)\n",
                        "file": "main.cpp",
                        "line": 401
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "13": {
            "status": 5,
            "run_result": {
                "output": "Izuzetak: Datoteka sadrzi besmislene podatke\n",
                "duration": 0,
                "status": 3,
                "core": "/tmp/buildservice/bs_1272/core.1926"
            },
            "debug_result": {
                "output": "[New LWP 1926]\nCore was generated by `bs_test_12'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x00000000004026c0 in Matrica<double>::AlocirajMemoriju (br_redova=32698, br_kolona=-19287664) at bs_test_13.cpp:85\n85\t\treturn elementi;\n#0  0x00000000004026c0 in Matrica<double>::AlocirajMemoriju (br_redova=32698, br_kolona=-19287664) at bs_test_13.cpp:85\n#1  0x0000000000401a2f in main () at bs_test_13.cpp:549",
                "parsed_output": [
                    {
                        "file": "main.cpp",
                        "line": 79
                    }
                ]
            },
            "profile_result": {
                "output": "==1970== Memcheck, a memory error detector\n==1970== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==1970== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info\n==1970== Command: bs_test_13\n==1970== Parent PID: 1969\n==1970== \n==1970== Conditional jump or move depends on uninitialised value(s)\n==1970==    at 0x402302: Matrica<double>::Matrica(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) (bs_test_13.cpp:473)\n==1970==    by 0x401A74: main (bs_test_13.cpp:556)\n==1970== \n==1970== \n==1970== HEAP SUMMARY:\n==1970==     in use at exit: 0 bytes in 0 blocks\n==1970==   total heap usage: 9 allocs, 9 frees, 90,541 bytes allocated\n==1970== \n==1970== All heap blocks were freed -- no leaks are possible\n==1970== \n==1970== For counts of detected and suppressed errors, rerun with: -v\n==1970== Use --track-origins=yes to see where uninitialised values come from\n==1970== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)\n",
                "status": 3,
                "parsed_output": [
                    {
                        "type": 3,
                        "output": " Conditional jump or move depends on uninitialised value(s)\n    at 0x402302: Matrica<double>::Matrica(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) (bs_test_13.cpp:473)\n    by 0x401A74: main (bs_test_13.cpp:556)\n",
                        "file": "main.cpp",
                        "line": 467
                    }
                ]
            },
            "compile_result": {
                "status": 1,
                "output": ""
            }
        },
        "14": {
            "status": 9,
            "run_result": {
                "output": "",
                "duration": 0,
                "status": 1
            },
            "debug_result": [],
            "profile_result": [],
            "compile_result": {
                "status": 1,
                "output": ""
            }
        }
    },
    "queue_items": 0,
    "time": 1592856254
}