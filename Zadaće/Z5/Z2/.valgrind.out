==9375== Memcheck, a memory error detector
==9375== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9375== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==9375== Command: /rhome/a/amulalic1/workspace/TP/Z5/Z2/.runme
==9375== Parent PID: 9356
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x10ACAB: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==9375==    by 0x10AEAC: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==9375==    by 0x10A6EA: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==9375==    by 0x109D9E: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:328)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x10BBB1: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:101)
==9375==    by 0x10B5D8: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==9375==    by 0x10ACBF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==9375==    by 0x10AEAC: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==9375==    by 0x10A6EA: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==9375==    by 0x109D9E: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:328)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C3012C: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10BBC7: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:111)
==9375==    by 0x10B5D8: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:436)
==9375==    by 0x10ACBF: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:172)
==9375==    by 0x10AEAC: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:187)
==9375==    by 0x10A6EA: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:138)
==9375==    by 0x109D9E: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:328)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x10C982: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:367)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C34066: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C34072: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C3419B: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C341B1: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C34082: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C340A9: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Conditional jump or move depends on uninitialised value(s)
==9375==    at 0x4C340AF: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Use of uninitialised value of size 8
==9375==    at 0x4C340D0: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375== 
==9375== Invalid read of size 2
==9375==    at 0x4C340D0: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375==  Address 0x2 is not stack'd, malloc'd or (recently) free'd
==9375== 
==9375== 
==9375== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==9375==  Access not within mapped region at address 0x2
==9375==    at 0x4C340D0: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==9375==    by 0x10C9A2: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int>(int const*, int const*, int*) (stl_algobase.h:368)
==9375==    by 0x10C608: int* std::__copy_move_a<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:386)
==9375==    by 0x10C209: int* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:424)
==9375==    by 0x10BC59: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:456)
==9375==    by 0x10B6C1: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:101)
==9375==    by 0x10AF11: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:134)
==9375==    by 0x10A73C: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:289)
==9375==    by 0x109DEC: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:331)
==9375==    by 0x1099DA: Padavine::Ispisi() const (main.cpp:55)
==9375==    by 0x109663: main (main.cpp:165)
==9375==  If you believe this happened as a result of a stack
==9375==  overflow in your program's main thread (unlikely but
==9375==  possible), you can try to increase the size of the
==9375==  main thread stack using the --main-stacksize= flag.
==9375==  The main thread stack size used in this run was 8388608.
==9375== 
==9375== HEAP SUMMARY:
==9375==     in use at exit: 1,101,176 bytes in 3 blocks
==9375==   total heap usage: 13 allocs, 10 frees, 1,174,040 bytes allocated
==9375== 
==9375== LEAK SUMMARY:
==9375==    definitely lost: 0 bytes in 0 blocks
==9375==    indirectly lost: 0 bytes in 0 blocks
==9375==      possibly lost: 0 bytes in 0 blocks
==9375==    still reachable: 1,101,176 bytes in 3 blocks
==9375==         suppressed: 0 bytes in 0 blocks
==9375== Reachable blocks (those to which a pointer was found) are not shown.
==9375== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==9375== 
==9375== For counts of detected and suppressed errors, rerun with: -v
==9375== Use --track-origins=yes to see where uninitialised values come from
==9375== ERROR SUMMARY: 13 errors from 13 contexts (suppressed: 0 from 0)
