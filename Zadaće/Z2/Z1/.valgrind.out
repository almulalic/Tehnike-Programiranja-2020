==30566== Memcheck, a memory error detector
==30566== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==30566== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==30566== Command: /rhome/a/amulalic1/workspace/TP/Z2/Z1/.runme
==30566== Parent PID: 30538
==30566== 
==30566== 
==30566== Process terminating with default action of signal 15 (SIGTERM)
==30566==    at 0x56EF081: read (read.c:27)
==30566==    by 0x566C147: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:531)
==30566==    by 0x566D3F1: _IO_default_uflow (genops.c:380)
==30566==    by 0x512B7EC: __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==30566==    by 0x5139599: std::istream::sentry::sentry(std::istream&, bool) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==30566==    by 0x513980D: std::istream::operator>>(int&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==30566==    by 0x10AF11: Unos(std::vector<std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >, std::allocator<std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > > >&, int) (main.cpp:241)
==30566==    by 0x10B27F: main (main.cpp:292)
==30566== 
==30566== HEAP SUMMARY:
==30566==     in use at exit: 210 bytes in 9 blocks
==30566==   total heap usage: 18 allocs, 9 frees, 74,223 bytes allocated
==30566== 
==30566== LEAK SUMMARY:
==30566==    definitely lost: 0 bytes in 0 blocks
==30566==    indirectly lost: 0 bytes in 0 blocks
==30566==      possibly lost: 0 bytes in 0 blocks
==30566==    still reachable: 210 bytes in 9 blocks
==30566==         suppressed: 0 bytes in 0 blocks
==30566== Reachable blocks (those to which a pointer was found) are not shown.
==30566== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==30566== 
==30566== For counts of detected and suppressed errors, rerun with: -v
==30566== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
